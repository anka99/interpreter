-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from ParEmm.y
-----------------------------------------------------------------------------

state 126 contains 1 shift/reduce conflicts.

rule 44 is unused
rule 45 is unused
rule 46 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> Decl                                     (5)
	ListTopDef -> TopDef                               (6)
	ListTopDef -> TopDef ListTopDef                    (7)
	Decl -> Type ListItem ';'                          (8)
	Decl -> Type Ident '(' ListArg ')' Block           (9)
	Arg -> Type Ident                                  (10)
	Arg -> Type '&' Ident                              (11)
	ListArg ->                                         (12)
	ListArg -> Arg                                     (13)
	ListArg -> Arg ',' ListArg                         (14)
	Item -> Ident                                      (15)
	Item -> Ident '=' Expr                             (16)
	Item -> Ident '[' Expr ']'                         (17)
	ListItem -> Item                                   (18)
	ListItem -> Item ',' ListItem                      (19)
	Block -> '{' ListStmt '}'                          (20)
	ListStmt ->                                        (21)
	ListStmt -> Stmt ListStmt                          (22)
	Stmt -> ';'                                        (23)
	Stmt -> Block                                      (24)
	Stmt -> Decl                                       (25)
	Stmt -> Ident '=' Expr ';'                         (26)
	Stmt -> Ident '[' Expr ']' '=' Expr ';'            (27)
	Stmt -> Ident '++' ';'                             (28)
	Stmt -> Ident '[' Expr ']' '++' ';'                (29)
	Stmt -> Ident '--' ';'                             (30)
	Stmt -> Ident '[' Expr ']' '--' ';'                (31)
	Stmt -> 'return' Expr ';'                          (32)
	Stmt -> 'return' ';'                               (33)
	Stmt -> 'if' '(' Expr ')' Stmt                     (34)
	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt         (35)
	Stmt -> 'while' '(' Expr ')' Stmt                  (36)
	Stmt -> 'break' ';'                                (37)
	Stmt -> 'continue' ';'                             (38)
	Stmt -> Expr ';'                                   (39)
	Type -> 'int'                                      (40)
	Type -> 'string'                                   (41)
	Type -> 'bool'                                     (42)
	Type -> 'void'                                     (43)
	ListType ->                                        (44)
	ListType -> Type                                   (45)
	ListType -> Type ',' ListType                      (46)
	Expr6 -> Ident '[' Expr ']'                        (47)
	Expr6 -> Ident                                     (48)
	Expr6 -> Integer                                   (49)
	Expr6 -> 'true'                                    (50)
	Expr6 -> 'false'                                   (51)
	Expr6 -> Ident '(' ListExpr ')'                    (52)
	Expr6 -> String                                    (53)
	Expr6 -> '(' Expr ')'                              (54)
	Expr5 -> '-' Expr6                                 (55)
	Expr5 -> '!' Expr6                                 (56)
	Expr5 -> Expr6                                     (57)
	Expr4 -> Expr4 MulOp Expr5                         (58)
	Expr4 -> Expr5                                     (59)
	Expr3 -> Expr3 AddOp Expr4                         (60)
	Expr3 -> Expr4                                     (61)
	Expr2 -> Expr2 RelOp Expr3                         (62)
	Expr2 -> Expr3                                     (63)
	Expr1 -> Expr2 '&&' Expr1                          (64)
	Expr1 -> Expr2                                     (65)
	Expr -> Expr1 '||' Expr                            (66)
	Expr -> Expr1                                      (67)
	ListExpr ->                                        (68)
	ListExpr -> Expr                                   (69)
	ListExpr -> Expr ',' ListExpr                      (70)
	AddOp -> '+'                                       (71)
	AddOp -> '-'                                       (72)
	MulOp -> '*'                                       (73)
	MulOp -> '/'                                       (74)
	MulOp -> '%'                                       (75)
	RelOp -> '<'                                       (76)
	RelOp -> '<='                                      (77)
	RelOp -> '>'                                       (78)
	RelOp -> '>='                                      (79)
	RelOp -> '=='                                      (80)
	RelOp -> '!='                                      (81)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'('            { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	'++'           { PT _ (TS _ 10) }
	','            { PT _ (TS _ 11) }
	'-'            { PT _ (TS _ 12) }
	'--'           { PT _ (TS _ 13) }
	'/'            { PT _ (TS _ 14) }
	';'            { PT _ (TS _ 15) }
	'<'            { PT _ (TS _ 16) }
	'<='           { PT _ (TS _ 17) }
	'='            { PT _ (TS _ 18) }
	'=='           { PT _ (TS _ 19) }
	'>'            { PT _ (TS _ 20) }
	'>='           { PT _ (TS _ 21) }
	'['            { PT _ (TS _ 22) }
	']'            { PT _ (TS _ 23) }
	'bool'         { PT _ (TS _ 24) }
	'break'        { PT _ (TS _ 25) }
	'continue'     { PT _ (TS _ 26) }
	'else'         { PT _ (TS _ 27) }
	'false'        { PT _ (TS _ 28) }
	'if'           { PT _ (TS _ 29) }
	'int'          { PT _ (TS _ 30) }
	'return'       { PT _ (TS _ 31) }
	'string'       { PT _ (TS _ 32) }
	'true'         { PT _ (TS _ 33) }
	'void'         { PT _ (TS _ 34) }
	'while'        { PT _ (TS _ 35) }
	'{'            { PT _ (TS _ 36) }
	'||'           { PT _ (TS _ 37) }
	'}'            { PT _ (TS _ 38) }
	L_Ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }
	L_quoted       { PT _ (TL $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rule  5
	ListTopDef      rules 6, 7
	Decl            rules 8, 9
	Arg             rules 10, 11
	ListArg         rules 12, 13, 14
	Item            rules 15, 16, 17
	ListItem        rules 18, 19
	Block           rule  20
	ListStmt        rules 21, 22
	Stmt            rules 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39
	Type            rules 40, 41, 42, 43
	ListType        rules 44, 45, 46
	Expr6           rules 47, 48, 49, 50, 51, 52, 53, 54
	Expr5           rules 55, 56, 57
	Expr4           rules 58, 59
	Expr3           rules 60, 61
	Expr2           rules 62, 63
	Expr1           rules 64, 65
	Expr            rules 66, 67
	ListExpr        rules 68, 69, 70
	AddOp           rules 71, 72
	MulOp           rules 73, 74, 75
	RelOp           rules 76, 77, 78, 79, 80, 81

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram -> . Program                        (rule 0)

	'bool'         shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'void'         shift, and enter state 11

	Program        goto state 3
	TopDef         goto state 4
	ListTopDef     goto state 5
	Decl           goto state 6
	Type           goto state 7

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'['            reduce using rule 1
	']'            reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 4

	ListTopDef -> TopDef .                              (rule 6)
	ListTopDef -> TopDef . ListTopDef                   (rule 7)

	'bool'         shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'void'         shift, and enter state 11
	%eof           reduce using rule 6

	TopDef         goto state 4
	ListTopDef     goto state 15
	Decl           goto state 6
	Type           goto state 7

State 5

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 6

	TopDef -> Decl .                                    (rule 5)

	'bool'         reduce using rule 5
	'int'          reduce using rule 5
	'string'       reduce using rule 5
	'void'         reduce using rule 5
	%eof           reduce using rule 5


State 7

	Decl -> Type . ListItem ';'                         (rule 8)
	Decl -> Type . Ident '(' ListArg ')' Block          (rule 9)

	L_Ident        shift, and enter state 2

	Ident          goto state 12
	Item           goto state 13
	ListItem       goto state 14

State 8

	Type -> 'bool' .                                    (rule 42)

	'&'            reduce using rule 42
	L_Ident        reduce using rule 42


State 9

	Type -> 'int' .                                     (rule 40)

	'&'            reduce using rule 40
	L_Ident        reduce using rule 40


State 10

	Type -> 'string' .                                  (rule 41)

	'&'            reduce using rule 41
	L_Ident        reduce using rule 41


State 11

	Type -> 'void' .                                    (rule 43)

	'&'            reduce using rule 43
	L_Ident        reduce using rule 43


State 12

	Decl -> Type Ident . '(' ListArg ')' Block          (rule 9)
	Item -> Ident .                                     (rule 15)
	Item -> Ident . '=' Expr                            (rule 16)
	Item -> Ident . '[' Expr ']'                        (rule 17)

	'('            shift, and enter state 18
	','            reduce using rule 15
	';'            reduce using rule 15
	'='            shift, and enter state 19
	'['            shift, and enter state 20


State 13

	ListItem -> Item .                                  (rule 18)
	ListItem -> Item . ',' ListItem                     (rule 19)

	','            shift, and enter state 17
	';'            reduce using rule 18


State 14

	Decl -> Type ListItem . ';'                         (rule 8)

	';'            shift, and enter state 16


State 15

	ListTopDef -> TopDef ListTopDef .                   (rule 7)

	%eof           reduce using rule 7


State 16

	Decl -> Type ListItem ';' .                         (rule 8)

	'!'            reduce using rule 8
	'('            reduce using rule 8
	'-'            reduce using rule 8
	';'            reduce using rule 8
	'bool'         reduce using rule 8
	'break'        reduce using rule 8
	'continue'     reduce using rule 8
	'else'         reduce using rule 8
	'false'        reduce using rule 8
	'if'           reduce using rule 8
	'int'          reduce using rule 8
	'return'       reduce using rule 8
	'string'       reduce using rule 8
	'true'         reduce using rule 8
	'void'         reduce using rule 8
	'while'        reduce using rule 8
	'{'            reduce using rule 8
	'}'            reduce using rule 8
	L_Ident        reduce using rule 8
	L_integ        reduce using rule 8
	L_quoted       reduce using rule 8
	%eof           reduce using rule 8


State 17

	ListItem -> Item ',' . ListItem                     (rule 19)

	L_Ident        shift, and enter state 2

	Ident          goto state 42
	Item           goto state 13
	ListItem       goto state 43

State 18

	Decl -> Type Ident '(' . ListArg ')' Block          (rule 9)

	')'            reduce using rule 12
	'bool'         shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'void'         shift, and enter state 11

	Arg            goto state 39
	ListArg        goto state 40
	Type           goto state 41

State 19

	Item -> Ident '=' . Expr                            (rule 16)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	'-'            shift, and enter state 33
	'false'        shift, and enter state 34
	'true'         shift, and enter state 35
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 36
	L_quoted       shift, and enter state 37

	Ident          goto state 21
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 24
	Expr5          goto state 25
	Expr4          goto state 26
	Expr3          goto state 27
	Expr2          goto state 28
	Expr1          goto state 29
	Expr           goto state 38

State 20

	Item -> Ident '[' . Expr ']'                        (rule 17)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	'-'            shift, and enter state 33
	'false'        shift, and enter state 34
	'true'         shift, and enter state 35
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 36
	L_quoted       shift, and enter state 37

	Ident          goto state 21
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 24
	Expr5          goto state 25
	Expr4          goto state 26
	Expr3          goto state 27
	Expr2          goto state 28
	Expr1          goto state 29
	Expr           goto state 30

State 21

	Expr6 -> Ident . '[' Expr ']'                       (rule 47)
	Expr6 -> Ident .                                    (rule 48)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 52)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	'('            shift, and enter state 68
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'['            shift, and enter state 69
	']'            reduce using rule 48
	'||'           reduce using rule 48


State 22

	Expr6 -> Integer .                                  (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	']'            reduce using rule 49
	'||'           reduce using rule 49


State 23

	Expr6 -> String .                                   (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	']'            reduce using rule 53
	'||'           reduce using rule 53


State 24

	Expr5 -> Expr6 .                                    (rule 57)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	']'            reduce using rule 57
	'||'           reduce using rule 57


State 25

	Expr4 -> Expr5 .                                    (rule 59)

	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&&'           reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	']'            reduce using rule 59
	'||'           reduce using rule 59


State 26

	Expr4 -> Expr4 . MulOp Expr5                        (rule 58)
	Expr3 -> Expr4 .                                    (rule 61)

	'!='           reduce using rule 61
	'%'            shift, and enter state 65
	'&&'           reduce using rule 61
	')'            reduce using rule 61
	'*'            shift, and enter state 66
	'+'            reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'/'            shift, and enter state 67
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	']'            reduce using rule 61
	'||'           reduce using rule 61

	MulOp          goto state 64

State 27

	Expr3 -> Expr3 . AddOp Expr4                        (rule 60)
	Expr2 -> Expr3 .                                    (rule 63)

	'!='           reduce using rule 63
	'&&'           reduce using rule 63
	')'            reduce using rule 63
	'+'            shift, and enter state 62
	','            reduce using rule 63
	'-'            shift, and enter state 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	']'            reduce using rule 63
	'||'           reduce using rule 63

	AddOp          goto state 61

State 28

	Expr2 -> Expr2 . RelOp Expr3                        (rule 62)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 64)
	Expr1 -> Expr2 .                                    (rule 65)

	'!='           shift, and enter state 54
	'&&'           shift, and enter state 55
	')'            reduce using rule 65
	','            reduce using rule 65
	';'            reduce using rule 65
	'<'            shift, and enter state 56
	'<='           shift, and enter state 57
	'=='           shift, and enter state 58
	'>'            shift, and enter state 59
	'>='           shift, and enter state 60
	']'            reduce using rule 65
	'||'           reduce using rule 65

	RelOp          goto state 53

State 29

	Expr -> Expr1 . '||' Expr                           (rule 66)
	Expr -> Expr1 .                                     (rule 67)

	')'            reduce using rule 67
	','            reduce using rule 67
	';'            reduce using rule 67
	']'            reduce using rule 67
	'||'           shift, and enter state 52


State 30

	Item -> Ident '[' Expr . ']'                        (rule 17)

	']'            shift, and enter state 51


State 31

	Expr5 -> '!' . Expr6                                (rule 56)

	'('            shift, and enter state 32
	'false'        shift, and enter state 34
	'true'         shift, and enter state 35
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 36
	L_quoted       shift, and enter state 37

	Ident          goto state 21
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 50

State 32

	Expr6 -> '(' . Expr ')'                             (rule 54)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	'-'            shift, and enter state 33
	'false'        shift, and enter state 34
	'true'         shift, and enter state 35
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 36
	L_quoted       shift, and enter state 37

	Ident          goto state 21
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 24
	Expr5          goto state 25
	Expr4          goto state 26
	Expr3          goto state 27
	Expr2          goto state 28
	Expr1          goto state 29
	Expr           goto state 49

State 33

	Expr5 -> '-' . Expr6                                (rule 55)

	'('            shift, and enter state 32
	'false'        shift, and enter state 34
	'true'         shift, and enter state 35
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 36
	L_quoted       shift, and enter state 37

	Ident          goto state 21
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 48

State 34

	Expr6 -> 'false' .                                  (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	']'            reduce using rule 51
	'||'           reduce using rule 51


State 35

	Expr6 -> 'true' .                                   (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	']'            reduce using rule 50
	'||'           reduce using rule 50


State 36

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	']'            reduce using rule 2
	'||'           reduce using rule 2


State 37

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	']'            reduce using rule 3
	'||'           reduce using rule 3


State 38

	Item -> Ident '=' Expr .                            (rule 16)

	','            reduce using rule 16
	';'            reduce using rule 16


State 39

	ListArg -> Arg .                                    (rule 13)
	ListArg -> Arg . ',' ListArg                        (rule 14)

	')'            reduce using rule 13
	','            shift, and enter state 47


State 40

	Decl -> Type Ident '(' ListArg . ')' Block          (rule 9)

	')'            shift, and enter state 46


State 41

	Arg -> Type . Ident                                 (rule 10)
	Arg -> Type . '&' Ident                             (rule 11)

	'&'            shift, and enter state 45
	L_Ident        shift, and enter state 2

	Ident          goto state 44

State 42

	Item -> Ident .                                     (rule 15)
	Item -> Ident . '=' Expr                            (rule 16)
	Item -> Ident . '[' Expr ']'                        (rule 17)

	','            reduce using rule 15
	';'            reduce using rule 15
	'='            shift, and enter state 19
	'['            shift, and enter state 20


State 43

	ListItem -> Item ',' ListItem .                     (rule 19)

	';'            reduce using rule 19


State 44

	Arg -> Type Ident .                                 (rule 10)

	')'            reduce using rule 10
	','            reduce using rule 10


State 45

	Arg -> Type '&' . Ident                             (rule 11)

	L_Ident        shift, and enter state 2

	Ident          goto state 82

State 46

	Decl -> Type Ident '(' ListArg ')' . Block          (rule 9)

	'{'            shift, and enter state 81

	Block          goto state 80

State 47

	ListArg -> Arg ',' . ListArg                        (rule 14)

	')'            reduce using rule 12
	'bool'         shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'void'         shift, and enter state 11

	Arg            goto state 39
	ListArg        goto state 79
	Type           goto state 41

State 48

	Expr5 -> '-' Expr6 .                                (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	']'            reduce using rule 55
	'||'           reduce using rule 55


State 49

	Expr6 -> '(' Expr . ')'                             (rule 54)

	')'            shift, and enter state 78


State 50

	Expr5 -> '!' Expr6 .                                (rule 56)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	']'            reduce using rule 56
	'||'           reduce using rule 56


State 51

	Item -> Ident '[' Expr ']' .                        (rule 17)

	','            reduce using rule 17
	';'            reduce using rule 17


State 52

	Expr -> Expr1 '||' . Expr                           (rule 66)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	'-'            shift, and enter state 33
	'false'        shift, and enter state 34
	'true'         shift, and enter state 35
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 36
	L_quoted       shift, and enter state 37

	Ident          goto state 21
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 24
	Expr5          goto state 25
	Expr4          goto state 26
	Expr3          goto state 27
	Expr2          goto state 28
	Expr1          goto state 29
	Expr           goto state 77

State 53

	Expr2 -> Expr2 RelOp . Expr3                        (rule 62)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	'-'            shift, and enter state 33
	'false'        shift, and enter state 34
	'true'         shift, and enter state 35
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 36
	L_quoted       shift, and enter state 37

	Ident          goto state 21
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 24
	Expr5          goto state 25
	Expr4          goto state 26
	Expr3          goto state 76

State 54

	RelOp -> '!=' .                                     (rule 81)

	'!'            reduce using rule 81
	'('            reduce using rule 81
	'-'            reduce using rule 81
	'false'        reduce using rule 81
	'true'         reduce using rule 81
	L_Ident        reduce using rule 81
	L_integ        reduce using rule 81
	L_quoted       reduce using rule 81


State 55

	Expr1 -> Expr2 '&&' . Expr1                         (rule 64)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	'-'            shift, and enter state 33
	'false'        shift, and enter state 34
	'true'         shift, and enter state 35
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 36
	L_quoted       shift, and enter state 37

	Ident          goto state 21
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 24
	Expr5          goto state 25
	Expr4          goto state 26
	Expr3          goto state 27
	Expr2          goto state 28
	Expr1          goto state 75

State 56

	RelOp -> '<' .                                      (rule 76)

	'!'            reduce using rule 76
	'('            reduce using rule 76
	'-'            reduce using rule 76
	'false'        reduce using rule 76
	'true'         reduce using rule 76
	L_Ident        reduce using rule 76
	L_integ        reduce using rule 76
	L_quoted       reduce using rule 76


State 57

	RelOp -> '<=' .                                     (rule 77)

	'!'            reduce using rule 77
	'('            reduce using rule 77
	'-'            reduce using rule 77
	'false'        reduce using rule 77
	'true'         reduce using rule 77
	L_Ident        reduce using rule 77
	L_integ        reduce using rule 77
	L_quoted       reduce using rule 77


State 58

	RelOp -> '==' .                                     (rule 80)

	'!'            reduce using rule 80
	'('            reduce using rule 80
	'-'            reduce using rule 80
	'false'        reduce using rule 80
	'true'         reduce using rule 80
	L_Ident        reduce using rule 80
	L_integ        reduce using rule 80
	L_quoted       reduce using rule 80


State 59

	RelOp -> '>' .                                      (rule 78)

	'!'            reduce using rule 78
	'('            reduce using rule 78
	'-'            reduce using rule 78
	'false'        reduce using rule 78
	'true'         reduce using rule 78
	L_Ident        reduce using rule 78
	L_integ        reduce using rule 78
	L_quoted       reduce using rule 78


State 60

	RelOp -> '>=' .                                     (rule 79)

	'!'            reduce using rule 79
	'('            reduce using rule 79
	'-'            reduce using rule 79
	'false'        reduce using rule 79
	'true'         reduce using rule 79
	L_Ident        reduce using rule 79
	L_integ        reduce using rule 79
	L_quoted       reduce using rule 79


State 61

	Expr3 -> Expr3 AddOp . Expr4                        (rule 60)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	'-'            shift, and enter state 33
	'false'        shift, and enter state 34
	'true'         shift, and enter state 35
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 36
	L_quoted       shift, and enter state 37

	Ident          goto state 21
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 24
	Expr5          goto state 25
	Expr4          goto state 74

State 62

	AddOp -> '+' .                                      (rule 71)

	'!'            reduce using rule 71
	'('            reduce using rule 71
	'-'            reduce using rule 71
	'false'        reduce using rule 71
	'true'         reduce using rule 71
	L_Ident        reduce using rule 71
	L_integ        reduce using rule 71
	L_quoted       reduce using rule 71


State 63

	AddOp -> '-' .                                      (rule 72)

	'!'            reduce using rule 72
	'('            reduce using rule 72
	'-'            reduce using rule 72
	'false'        reduce using rule 72
	'true'         reduce using rule 72
	L_Ident        reduce using rule 72
	L_integ        reduce using rule 72
	L_quoted       reduce using rule 72


State 64

	Expr4 -> Expr4 MulOp . Expr5                        (rule 58)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	'-'            shift, and enter state 33
	'false'        shift, and enter state 34
	'true'         shift, and enter state 35
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 36
	L_quoted       shift, and enter state 37

	Ident          goto state 21
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 24
	Expr5          goto state 73

State 65

	MulOp -> '%' .                                      (rule 75)

	'!'            reduce using rule 75
	'('            reduce using rule 75
	'-'            reduce using rule 75
	'false'        reduce using rule 75
	'true'         reduce using rule 75
	L_Ident        reduce using rule 75
	L_integ        reduce using rule 75
	L_quoted       reduce using rule 75


State 66

	MulOp -> '*' .                                      (rule 73)

	'!'            reduce using rule 73
	'('            reduce using rule 73
	'-'            reduce using rule 73
	'false'        reduce using rule 73
	'true'         reduce using rule 73
	L_Ident        reduce using rule 73
	L_integ        reduce using rule 73
	L_quoted       reduce using rule 73


State 67

	MulOp -> '/' .                                      (rule 74)

	'!'            reduce using rule 74
	'('            reduce using rule 74
	'-'            reduce using rule 74
	'false'        reduce using rule 74
	'true'         reduce using rule 74
	L_Ident        reduce using rule 74
	L_integ        reduce using rule 74
	L_quoted       reduce using rule 74


State 68

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 52)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	')'            reduce using rule 68
	'-'            shift, and enter state 33
	'false'        shift, and enter state 34
	'true'         shift, and enter state 35
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 36
	L_quoted       shift, and enter state 37

	Ident          goto state 21
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 24
	Expr5          goto state 25
	Expr4          goto state 26
	Expr3          goto state 27
	Expr2          goto state 28
	Expr1          goto state 29
	Expr           goto state 71
	ListExpr       goto state 72

State 69

	Expr6 -> Ident '[' . Expr ']'                       (rule 47)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	'-'            shift, and enter state 33
	'false'        shift, and enter state 34
	'true'         shift, and enter state 35
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 36
	L_quoted       shift, and enter state 37

	Ident          goto state 21
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 24
	Expr5          goto state 25
	Expr4          goto state 26
	Expr3          goto state 27
	Expr2          goto state 28
	Expr1          goto state 29
	Expr           goto state 70

State 70

	Expr6 -> Ident '[' Expr . ']'                       (rule 47)

	']'            shift, and enter state 97


State 71

	ListExpr -> Expr .                                  (rule 69)
	ListExpr -> Expr . ',' ListExpr                     (rule 70)

	')'            reduce using rule 69
	','            shift, and enter state 96


State 72

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 52)

	')'            shift, and enter state 95


State 73

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 58)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	']'            reduce using rule 58
	'||'           reduce using rule 58


State 74

	Expr4 -> Expr4 . MulOp Expr5                        (rule 58)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 60)

	'!='           reduce using rule 60
	'%'            shift, and enter state 65
	'&&'           reduce using rule 60
	')'            reduce using rule 60
	'*'            shift, and enter state 66
	'+'            reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'/'            shift, and enter state 67
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	']'            reduce using rule 60
	'||'           reduce using rule 60

	MulOp          goto state 64

State 75

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 64)

	')'            reduce using rule 64
	','            reduce using rule 64
	';'            reduce using rule 64
	']'            reduce using rule 64
	'||'           reduce using rule 64


State 76

	Expr3 -> Expr3 . AddOp Expr4                        (rule 60)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 62)

	'!='           reduce using rule 62
	'&&'           reduce using rule 62
	')'            reduce using rule 62
	'+'            shift, and enter state 62
	','            reduce using rule 62
	'-'            shift, and enter state 63
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	']'            reduce using rule 62
	'||'           reduce using rule 62

	AddOp          goto state 61

State 77

	Expr -> Expr1 '||' Expr .                           (rule 66)

	')'            reduce using rule 66
	','            reduce using rule 66
	';'            reduce using rule 66
	']'            reduce using rule 66


State 78

	Expr6 -> '(' Expr ')' .                             (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	']'            reduce using rule 54
	'||'           reduce using rule 54


State 79

	ListArg -> Arg ',' ListArg .                        (rule 14)

	')'            reduce using rule 14


State 80

	Decl -> Type Ident '(' ListArg ')' Block .          (rule 9)

	'!'            reduce using rule 9
	'('            reduce using rule 9
	'-'            reduce using rule 9
	';'            reduce using rule 9
	'bool'         reduce using rule 9
	'break'        reduce using rule 9
	'continue'     reduce using rule 9
	'else'         reduce using rule 9
	'false'        reduce using rule 9
	'if'           reduce using rule 9
	'int'          reduce using rule 9
	'return'       reduce using rule 9
	'string'       reduce using rule 9
	'true'         reduce using rule 9
	'void'         reduce using rule 9
	'while'        reduce using rule 9
	'{'            reduce using rule 9
	'}'            reduce using rule 9
	L_Ident        reduce using rule 9
	L_integ        reduce using rule 9
	L_quoted       reduce using rule 9
	%eof           reduce using rule 9


State 81

	Block -> '{' . ListStmt '}'                         (rule 20)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	'-'            shift, and enter state 33
	';'            shift, and enter state 89
	'bool'         shift, and enter state 8
	'break'        shift, and enter state 90
	'continue'     shift, and enter state 91
	'false'        shift, and enter state 34
	'if'           shift, and enter state 92
	'int'          shift, and enter state 9
	'return'       shift, and enter state 93
	'string'       shift, and enter state 10
	'true'         shift, and enter state 35
	'void'         shift, and enter state 11
	'while'        shift, and enter state 94
	'{'            shift, and enter state 81
	'}'            reduce using rule 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 36
	L_quoted       shift, and enter state 37

	Ident          goto state 83
	Integer        goto state 22
	String         goto state 23
	Decl           goto state 84
	Block          goto state 85
	ListStmt       goto state 86
	Stmt           goto state 87
	Type           goto state 7
	Expr6          goto state 24
	Expr5          goto state 25
	Expr4          goto state 26
	Expr3          goto state 27
	Expr2          goto state 28
	Expr1          goto state 29
	Expr           goto state 88

State 82

	Arg -> Type '&' Ident .                             (rule 11)

	')'            reduce using rule 11
	','            reduce using rule 11


State 83

	Stmt -> Ident . '=' Expr ';'                        (rule 26)
	Stmt -> Ident . '[' Expr ']' '=' Expr ';'           (rule 27)
	Stmt -> Ident . '++' ';'                            (rule 28)
	Stmt -> Ident . '[' Expr ']' '++' ';'               (rule 29)
	Stmt -> Ident . '--' ';'                            (rule 30)
	Stmt -> Ident . '[' Expr ']' '--' ';'               (rule 31)
	Expr6 -> Ident . '[' Expr ']'                       (rule 47)
	Expr6 -> Ident .                                    (rule 48)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 52)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	'('            shift, and enter state 68
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	'++'           shift, and enter state 108
	'-'            reduce using rule 48
	'--'           shift, and enter state 109
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'='            shift, and enter state 110
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'['            shift, and enter state 111
	'||'           reduce using rule 48


State 84

	Stmt -> Decl .                                      (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'bool'         reduce using rule 25
	'break'        reduce using rule 25
	'continue'     reduce using rule 25
	'else'         reduce using rule 25
	'false'        reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 85

	Stmt -> Block .                                     (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'bool'         reduce using rule 24
	'break'        reduce using rule 24
	'continue'     reduce using rule 24
	'else'         reduce using rule 24
	'false'        reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 86

	Block -> '{' ListStmt . '}'                         (rule 20)

	'}'            shift, and enter state 107


State 87

	ListStmt -> Stmt . ListStmt                         (rule 22)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	'-'            shift, and enter state 33
	';'            shift, and enter state 89
	'bool'         shift, and enter state 8
	'break'        shift, and enter state 90
	'continue'     shift, and enter state 91
	'false'        shift, and enter state 34
	'if'           shift, and enter state 92
	'int'          shift, and enter state 9
	'return'       shift, and enter state 93
	'string'       shift, and enter state 10
	'true'         shift, and enter state 35
	'void'         shift, and enter state 11
	'while'        shift, and enter state 94
	'{'            shift, and enter state 81
	'}'            reduce using rule 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 36
	L_quoted       shift, and enter state 37

	Ident          goto state 83
	Integer        goto state 22
	String         goto state 23
	Decl           goto state 84
	Block          goto state 85
	ListStmt       goto state 106
	Stmt           goto state 87
	Type           goto state 7
	Expr6          goto state 24
	Expr5          goto state 25
	Expr4          goto state 26
	Expr3          goto state 27
	Expr2          goto state 28
	Expr1          goto state 29
	Expr           goto state 88

State 88

	Stmt -> Expr . ';'                                  (rule 39)

	';'            shift, and enter state 105


State 89

	Stmt -> ';' .                                       (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'bool'         reduce using rule 23
	'break'        reduce using rule 23
	'continue'     reduce using rule 23
	'else'         reduce using rule 23
	'false'        reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 90

	Stmt -> 'break' . ';'                               (rule 37)

	';'            shift, and enter state 104


State 91

	Stmt -> 'continue' . ';'                            (rule 38)

	';'            shift, and enter state 103


State 92

	Stmt -> 'if' . '(' Expr ')' Stmt                    (rule 34)
	Stmt -> 'if' . '(' Expr ')' Stmt 'else' Stmt        (rule 35)

	'('            shift, and enter state 102


State 93

	Stmt -> 'return' . Expr ';'                         (rule 32)
	Stmt -> 'return' . ';'                              (rule 33)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	'-'            shift, and enter state 33
	';'            shift, and enter state 101
	'false'        shift, and enter state 34
	'true'         shift, and enter state 35
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 36
	L_quoted       shift, and enter state 37

	Ident          goto state 21
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 24
	Expr5          goto state 25
	Expr4          goto state 26
	Expr3          goto state 27
	Expr2          goto state 28
	Expr1          goto state 29
	Expr           goto state 100

State 94

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 36)

	'('            shift, and enter state 99


State 95

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	']'            reduce using rule 52
	'||'           reduce using rule 52


State 96

	ListExpr -> Expr ',' . ListExpr                     (rule 70)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	')'            reduce using rule 68
	'-'            shift, and enter state 33
	'false'        shift, and enter state 34
	'true'         shift, and enter state 35
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 36
	L_quoted       shift, and enter state 37

	Ident          goto state 21
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 24
	Expr5          goto state 25
	Expr4          goto state 26
	Expr3          goto state 27
	Expr2          goto state 28
	Expr1          goto state 29
	Expr           goto state 71
	ListExpr       goto state 98

State 97

	Expr6 -> Ident '[' Expr ']' .                       (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	']'            reduce using rule 47
	'||'           reduce using rule 47


State 98

	ListExpr -> Expr ',' ListExpr .                     (rule 70)

	')'            reduce using rule 70


State 99

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 36)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	'-'            shift, and enter state 33
	'false'        shift, and enter state 34
	'true'         shift, and enter state 35
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 36
	L_quoted       shift, and enter state 37

	Ident          goto state 21
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 24
	Expr5          goto state 25
	Expr4          goto state 26
	Expr3          goto state 27
	Expr2          goto state 28
	Expr1          goto state 29
	Expr           goto state 118

State 100

	Stmt -> 'return' Expr . ';'                         (rule 32)

	';'            shift, and enter state 117


State 101

	Stmt -> 'return' ';' .                              (rule 33)

	'!'            reduce using rule 33
	'('            reduce using rule 33
	'-'            reduce using rule 33
	';'            reduce using rule 33
	'bool'         reduce using rule 33
	'break'        reduce using rule 33
	'continue'     reduce using rule 33
	'else'         reduce using rule 33
	'false'        reduce using rule 33
	'if'           reduce using rule 33
	'int'          reduce using rule 33
	'return'       reduce using rule 33
	'string'       reduce using rule 33
	'true'         reduce using rule 33
	'void'         reduce using rule 33
	'while'        reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	L_Ident        reduce using rule 33
	L_integ        reduce using rule 33
	L_quoted       reduce using rule 33


State 102

	Stmt -> 'if' '(' . Expr ')' Stmt                    (rule 34)
	Stmt -> 'if' '(' . Expr ')' Stmt 'else' Stmt        (rule 35)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	'-'            shift, and enter state 33
	'false'        shift, and enter state 34
	'true'         shift, and enter state 35
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 36
	L_quoted       shift, and enter state 37

	Ident          goto state 21
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 24
	Expr5          goto state 25
	Expr4          goto state 26
	Expr3          goto state 27
	Expr2          goto state 28
	Expr1          goto state 29
	Expr           goto state 116

State 103

	Stmt -> 'continue' ';' .                            (rule 38)

	'!'            reduce using rule 38
	'('            reduce using rule 38
	'-'            reduce using rule 38
	';'            reduce using rule 38
	'bool'         reduce using rule 38
	'break'        reduce using rule 38
	'continue'     reduce using rule 38
	'else'         reduce using rule 38
	'false'        reduce using rule 38
	'if'           reduce using rule 38
	'int'          reduce using rule 38
	'return'       reduce using rule 38
	'string'       reduce using rule 38
	'true'         reduce using rule 38
	'void'         reduce using rule 38
	'while'        reduce using rule 38
	'{'            reduce using rule 38
	'}'            reduce using rule 38
	L_Ident        reduce using rule 38
	L_integ        reduce using rule 38
	L_quoted       reduce using rule 38


State 104

	Stmt -> 'break' ';' .                               (rule 37)

	'!'            reduce using rule 37
	'('            reduce using rule 37
	'-'            reduce using rule 37
	';'            reduce using rule 37
	'bool'         reduce using rule 37
	'break'        reduce using rule 37
	'continue'     reduce using rule 37
	'else'         reduce using rule 37
	'false'        reduce using rule 37
	'if'           reduce using rule 37
	'int'          reduce using rule 37
	'return'       reduce using rule 37
	'string'       reduce using rule 37
	'true'         reduce using rule 37
	'void'         reduce using rule 37
	'while'        reduce using rule 37
	'{'            reduce using rule 37
	'}'            reduce using rule 37
	L_Ident        reduce using rule 37
	L_integ        reduce using rule 37
	L_quoted       reduce using rule 37


State 105

	Stmt -> Expr ';' .                                  (rule 39)

	'!'            reduce using rule 39
	'('            reduce using rule 39
	'-'            reduce using rule 39
	';'            reduce using rule 39
	'bool'         reduce using rule 39
	'break'        reduce using rule 39
	'continue'     reduce using rule 39
	'else'         reduce using rule 39
	'false'        reduce using rule 39
	'if'           reduce using rule 39
	'int'          reduce using rule 39
	'return'       reduce using rule 39
	'string'       reduce using rule 39
	'true'         reduce using rule 39
	'void'         reduce using rule 39
	'while'        reduce using rule 39
	'{'            reduce using rule 39
	'}'            reduce using rule 39
	L_Ident        reduce using rule 39
	L_integ        reduce using rule 39
	L_quoted       reduce using rule 39


State 106

	ListStmt -> Stmt ListStmt .                         (rule 22)

	'}'            reduce using rule 22


State 107

	Block -> '{' ListStmt '}' .                         (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'bool'         reduce using rule 20
	'break'        reduce using rule 20
	'continue'     reduce using rule 20
	'else'         reduce using rule 20
	'false'        reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'return'       reduce using rule 20
	'string'       reduce using rule 20
	'true'         reduce using rule 20
	'void'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20
	%eof           reduce using rule 20


State 108

	Stmt -> Ident '++' . ';'                            (rule 28)

	';'            shift, and enter state 115


State 109

	Stmt -> Ident '--' . ';'                            (rule 30)

	';'            shift, and enter state 114


State 110

	Stmt -> Ident '=' . Expr ';'                        (rule 26)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	'-'            shift, and enter state 33
	'false'        shift, and enter state 34
	'true'         shift, and enter state 35
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 36
	L_quoted       shift, and enter state 37

	Ident          goto state 21
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 24
	Expr5          goto state 25
	Expr4          goto state 26
	Expr3          goto state 27
	Expr2          goto state 28
	Expr1          goto state 29
	Expr           goto state 113

State 111

	Stmt -> Ident '[' . Expr ']' '=' Expr ';'           (rule 27)
	Stmt -> Ident '[' . Expr ']' '++' ';'               (rule 29)
	Stmt -> Ident '[' . Expr ']' '--' ';'               (rule 31)
	Expr6 -> Ident '[' . Expr ']'                       (rule 47)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	'-'            shift, and enter state 33
	'false'        shift, and enter state 34
	'true'         shift, and enter state 35
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 36
	L_quoted       shift, and enter state 37

	Ident          goto state 21
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 24
	Expr5          goto state 25
	Expr4          goto state 26
	Expr3          goto state 27
	Expr2          goto state 28
	Expr1          goto state 29
	Expr           goto state 112

State 112

	Stmt -> Ident '[' Expr . ']' '=' Expr ';'           (rule 27)
	Stmt -> Ident '[' Expr . ']' '++' ';'               (rule 29)
	Stmt -> Ident '[' Expr . ']' '--' ';'               (rule 31)
	Expr6 -> Ident '[' Expr . ']'                       (rule 47)

	']'            shift, and enter state 122


State 113

	Stmt -> Ident '=' Expr . ';'                        (rule 26)

	';'            shift, and enter state 121


State 114

	Stmt -> Ident '--' ';' .                            (rule 30)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'bool'         reduce using rule 30
	'break'        reduce using rule 30
	'continue'     reduce using rule 30
	'else'         reduce using rule 30
	'false'        reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'return'       reduce using rule 30
	'string'       reduce using rule 30
	'true'         reduce using rule 30
	'void'         reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_Ident        reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


State 115

	Stmt -> Ident '++' ';' .                            (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'bool'         reduce using rule 28
	'break'        reduce using rule 28
	'continue'     reduce using rule 28
	'else'         reduce using rule 28
	'false'        reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'true'         reduce using rule 28
	'void'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_Ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 116

	Stmt -> 'if' '(' Expr . ')' Stmt                    (rule 34)
	Stmt -> 'if' '(' Expr . ')' Stmt 'else' Stmt        (rule 35)

	')'            shift, and enter state 120


State 117

	Stmt -> 'return' Expr ';' .                         (rule 32)

	'!'            reduce using rule 32
	'('            reduce using rule 32
	'-'            reduce using rule 32
	';'            reduce using rule 32
	'bool'         reduce using rule 32
	'break'        reduce using rule 32
	'continue'     reduce using rule 32
	'else'         reduce using rule 32
	'false'        reduce using rule 32
	'if'           reduce using rule 32
	'int'          reduce using rule 32
	'return'       reduce using rule 32
	'string'       reduce using rule 32
	'true'         reduce using rule 32
	'void'         reduce using rule 32
	'while'        reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	L_Ident        reduce using rule 32
	L_integ        reduce using rule 32
	L_quoted       reduce using rule 32


State 118

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 36)

	')'            shift, and enter state 119


State 119

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 36)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	'-'            shift, and enter state 33
	';'            shift, and enter state 89
	'bool'         shift, and enter state 8
	'break'        shift, and enter state 90
	'continue'     shift, and enter state 91
	'false'        shift, and enter state 34
	'if'           shift, and enter state 92
	'int'          shift, and enter state 9
	'return'       shift, and enter state 93
	'string'       shift, and enter state 10
	'true'         shift, and enter state 35
	'void'         shift, and enter state 11
	'while'        shift, and enter state 94
	'{'            shift, and enter state 81
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 36
	L_quoted       shift, and enter state 37

	Ident          goto state 83
	Integer        goto state 22
	String         goto state 23
	Decl           goto state 84
	Block          goto state 85
	Stmt           goto state 127
	Type           goto state 7
	Expr6          goto state 24
	Expr5          goto state 25
	Expr4          goto state 26
	Expr3          goto state 27
	Expr2          goto state 28
	Expr1          goto state 29
	Expr           goto state 88

State 120

	Stmt -> 'if' '(' Expr ')' . Stmt                    (rule 34)
	Stmt -> 'if' '(' Expr ')' . Stmt 'else' Stmt        (rule 35)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	'-'            shift, and enter state 33
	';'            shift, and enter state 89
	'bool'         shift, and enter state 8
	'break'        shift, and enter state 90
	'continue'     shift, and enter state 91
	'false'        shift, and enter state 34
	'if'           shift, and enter state 92
	'int'          shift, and enter state 9
	'return'       shift, and enter state 93
	'string'       shift, and enter state 10
	'true'         shift, and enter state 35
	'void'         shift, and enter state 11
	'while'        shift, and enter state 94
	'{'            shift, and enter state 81
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 36
	L_quoted       shift, and enter state 37

	Ident          goto state 83
	Integer        goto state 22
	String         goto state 23
	Decl           goto state 84
	Block          goto state 85
	Stmt           goto state 126
	Type           goto state 7
	Expr6          goto state 24
	Expr5          goto state 25
	Expr4          goto state 26
	Expr3          goto state 27
	Expr2          goto state 28
	Expr1          goto state 29
	Expr           goto state 88

State 121

	Stmt -> Ident '=' Expr ';' .                        (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'bool'         reduce using rule 26
	'break'        reduce using rule 26
	'continue'     reduce using rule 26
	'else'         reduce using rule 26
	'false'        reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 122

	Stmt -> Ident '[' Expr ']' . '=' Expr ';'           (rule 27)
	Stmt -> Ident '[' Expr ']' . '++' ';'               (rule 29)
	Stmt -> Ident '[' Expr ']' . '--' ';'               (rule 31)
	Expr6 -> Ident '[' Expr ']' .                       (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	'++'           shift, and enter state 123
	'-'            reduce using rule 47
	'--'           shift, and enter state 124
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'='            shift, and enter state 125
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47


State 123

	Stmt -> Ident '[' Expr ']' '++' . ';'               (rule 29)

	';'            shift, and enter state 131


State 124

	Stmt -> Ident '[' Expr ']' '--' . ';'               (rule 31)

	';'            shift, and enter state 130


State 125

	Stmt -> Ident '[' Expr ']' '=' . Expr ';'           (rule 27)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	'-'            shift, and enter state 33
	'false'        shift, and enter state 34
	'true'         shift, and enter state 35
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 36
	L_quoted       shift, and enter state 37

	Ident          goto state 21
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 24
	Expr5          goto state 25
	Expr4          goto state 26
	Expr3          goto state 27
	Expr2          goto state 28
	Expr1          goto state 29
	Expr           goto state 129

State 126

	Stmt -> 'if' '(' Expr ')' Stmt .                    (rule 34)
	Stmt -> 'if' '(' Expr ')' Stmt . 'else' Stmt        (rule 35)

	'!'            reduce using rule 34
	'('            reduce using rule 34
	'-'            reduce using rule 34
	';'            reduce using rule 34
	'bool'         reduce using rule 34
	'break'        reduce using rule 34
	'continue'     reduce using rule 34
	'else'         shift, and enter state 128
			(reduce using rule 34)

	'false'        reduce using rule 34
	'if'           reduce using rule 34
	'int'          reduce using rule 34
	'return'       reduce using rule 34
	'string'       reduce using rule 34
	'true'         reduce using rule 34
	'void'         reduce using rule 34
	'while'        reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34
	L_Ident        reduce using rule 34
	L_integ        reduce using rule 34
	L_quoted       reduce using rule 34


State 127

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 36)

	'!'            reduce using rule 36
	'('            reduce using rule 36
	'-'            reduce using rule 36
	';'            reduce using rule 36
	'bool'         reduce using rule 36
	'break'        reduce using rule 36
	'continue'     reduce using rule 36
	'else'         reduce using rule 36
	'false'        reduce using rule 36
	'if'           reduce using rule 36
	'int'          reduce using rule 36
	'return'       reduce using rule 36
	'string'       reduce using rule 36
	'true'         reduce using rule 36
	'void'         reduce using rule 36
	'while'        reduce using rule 36
	'{'            reduce using rule 36
	'}'            reduce using rule 36
	L_Ident        reduce using rule 36
	L_integ        reduce using rule 36
	L_quoted       reduce using rule 36


State 128

	Stmt -> 'if' '(' Expr ')' Stmt 'else' . Stmt        (rule 35)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	'-'            shift, and enter state 33
	';'            shift, and enter state 89
	'bool'         shift, and enter state 8
	'break'        shift, and enter state 90
	'continue'     shift, and enter state 91
	'false'        shift, and enter state 34
	'if'           shift, and enter state 92
	'int'          shift, and enter state 9
	'return'       shift, and enter state 93
	'string'       shift, and enter state 10
	'true'         shift, and enter state 35
	'void'         shift, and enter state 11
	'while'        shift, and enter state 94
	'{'            shift, and enter state 81
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 36
	L_quoted       shift, and enter state 37

	Ident          goto state 83
	Integer        goto state 22
	String         goto state 23
	Decl           goto state 84
	Block          goto state 85
	Stmt           goto state 133
	Type           goto state 7
	Expr6          goto state 24
	Expr5          goto state 25
	Expr4          goto state 26
	Expr3          goto state 27
	Expr2          goto state 28
	Expr1          goto state 29
	Expr           goto state 88

State 129

	Stmt -> Ident '[' Expr ']' '=' Expr . ';'           (rule 27)

	';'            shift, and enter state 132


State 130

	Stmt -> Ident '[' Expr ']' '--' ';' .               (rule 31)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	'-'            reduce using rule 31
	';'            reduce using rule 31
	'bool'         reduce using rule 31
	'break'        reduce using rule 31
	'continue'     reduce using rule 31
	'else'         reduce using rule 31
	'false'        reduce using rule 31
	'if'           reduce using rule 31
	'int'          reduce using rule 31
	'return'       reduce using rule 31
	'string'       reduce using rule 31
	'true'         reduce using rule 31
	'void'         reduce using rule 31
	'while'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_Ident        reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31


State 131

	Stmt -> Ident '[' Expr ']' '++' ';' .               (rule 29)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'bool'         reduce using rule 29
	'break'        reduce using rule 29
	'continue'     reduce using rule 29
	'else'         reduce using rule 29
	'false'        reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'return'       reduce using rule 29
	'string'       reduce using rule 29
	'true'         reduce using rule 29
	'void'         reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_Ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 132

	Stmt -> Ident '[' Expr ']' '=' Expr ';' .           (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'bool'         reduce using rule 27
	'break'        reduce using rule 27
	'continue'     reduce using rule 27
	'else'         reduce using rule 27
	'false'        reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'void'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 133

	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt .        (rule 35)

	'!'            reduce using rule 35
	'('            reduce using rule 35
	'-'            reduce using rule 35
	';'            reduce using rule 35
	'bool'         reduce using rule 35
	'break'        reduce using rule 35
	'continue'     reduce using rule 35
	'else'         reduce using rule 35
	'false'        reduce using rule 35
	'if'           reduce using rule 35
	'int'          reduce using rule 35
	'return'       reduce using rule 35
	'string'       reduce using rule 35
	'true'         reduce using rule 35
	'void'         reduce using rule 35
	'while'        reduce using rule 35
	'{'            reduce using rule 35
	'}'            reduce using rule 35
	L_Ident        reduce using rule 35
	L_integ        reduce using rule 35
	L_quoted       reduce using rule 35


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 82
Number of terminals: 41
Number of non-terminals: 28
Number of states: 134
